	<constraint>
		<constraintid>ngen_t</constraintid>
		<parameters>
			<parameter>parameters[0]</parameter>
		</parameters>
	</constraint>
Description: Do not generate type <b>parameters[0]</b> in the solution.
	<constraint>
		<constraintid>gen_ite_t</constraintid>
		<parameters>
			<parameter>parameters[0]</parameter>
			<parameter>parameters[1]</parameter>
		</parameters>
	</constraint>
Description: If we have generated data type <b>parameters[0]</b>, then generate 
type <b>parameters[1]</b> subsequently.
	<constraint>
		<constraintid>use_ite_t</constraintid>
		<parameters>
			<parameter>parameters[0]</parameter>
			<parameter>parameters[1]</parameter>
		</parameters>
	</constraint>
Description: If we have used data type <b>parameters[0]</b>, then use type <b>pa
rameters[1]</b> subsequently.
	<constraint>
		<constraintid>gen_itn_t</constraintid>
		<parameters>
			<parameter>parameters[0]</parameter>
			<parameter>parameters[1]</parameter>
		</parameters>
	</constraint>
Description: If we have generated data type <b>parameters[0]</b>, then do not ge
nerate type <b>parameters[1]</b> subsequently.
	<constraint>
		<constraintid>itn_m</constraintid>
		<parameters>
			<parameter>parameters[0]</parameter>
			<parameter>parameters[1]</parameter>
		</parameters>
	</constraint>
Description: If we use module <b>parameters[0]</b>, then do not use <b>parameter
s[1]</b> subsequently.
	<constraint>
		<constraintid>use_m</constraintid>
		<parameters>
			<parameter>parameters[0]</parameter>
		</parameters>
	</constraint>
Description: Use module <b>parameters[0]</b> in the solution.
	<constraint>
		<constraintid>ite_m</constraintid>
		<parameters>
			<parameter>parameters[0]</parameter>
			<parameter>parameters[1]</parameter>
		</parameters>
	</constraint>
Description: If we use module <b>parameters[0]</b>, then use <b>parameters[1]</b
> subsequently.
	<constraint>
		<constraintid>prev_m</constraintid>
		<parameters>
			<parameter>parameters[0]</parameter>
			<parameter>parameters[1]</parameter>
		</parameters>
	</constraint>
Description: If we use module <b>parameters[0]</b>, then we must have used <b>pa
rameters[1]</b> as a previous module in the sequence.
	<constraint>
		<constraintid>nuse_t</constraintid>
		<parameters>
			<parameter>parameters[0]</parameter>
		</parameters>
	</constraint>
Description: Do not use type <b>parameters[0]</b> in the solution.
	<constraint>
		<constraintid>depend_m</constraintid>
		<parameters>
			<parameter>parameters[0]</parameter>
			<parameter>parameters[1]</parameter>
		</parameters>
	</constraint>
Description: If we use module <b>parameters[0]</b>, then we must have used <b>pa
rameters[1]</b> prior to it.
	<constraint>
		<constraintid>use_t</constraintid>
		<parameters>
			<parameter>parameters[0]</parameter>
		</parameters>
	</constraint>
Description: Use type <b>parameters[0]</b> in the solution.
	<constraint>
		<constraintid>nuse_m</constraintid>
		<parameters>
			<parameter>parameters[0]</parameter>
		</parameters>
	</constraint>
Description: Do not use module <b>parameters[0]</b> in the solution.
	<constraint>
		<constraintid>last_m</constraintid>
		<parameters>
			<parameter>parameters[0]</parameter>
		</parameters>
	</constraint>
Description: Use <b>parameters[0]</b> as last module in the solution.
	<constraint>
		<constraintid>next_m</constraintid>
		<parameters>
			<parameter>parameters[0]</parameter>
			<parameter>parameters[1]</parameter>
		</parameters>
	</constraint>
Description: If we use module <b>parameters[0]</b>, then use <b>parameters[1]</b
> as a next module in the sequence.
	<constraint>
		<constraintid>use_itn_t</constraintid>
		<parameters>
			<parameter>parameters[0]</parameter>
			<parameter>parameters[1]</parameter>
		</parameters>
	</constraint>
Description: If we have used data type <b>parameters[0]</b>, then do not use typ
e <b>parameters[1]</b> subsequently.
	<constraint>
		<constraintid>gen_t</constraintid>
		<parameters>
			<parameter>parameters[0]</parameter>
		</parameters>
	</constraint>
Description: Generate type <b>parameters[0]</b> in the solution.
